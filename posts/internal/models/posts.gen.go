// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package models

import (
	"time"

	"gorm.io/gorm"
)

const TableNamePost = "posts"

// Post mapped from table <posts>
type Post struct {
	PostID          uint64         `gorm:"column:post_id;type:bigint(20) unsigned;primaryKey;autoIncrement:true" json:"post_id"`
	UserID          uint64         `gorm:"column:user_id;type:bigint(20) unsigned;not null;index:user_id,priority:1" json:"user_id"`
	UserIP          []byte         `gorm:"column:user_ip;type:binary(16);not null" json:"user_ip"`
	ScopeID         uint64         `gorm:"column:scope_id;type:bigint(20) unsigned;not null;index:scope_id,priority:1" json:"scope_id"`
	CategoryID      uint64         `gorm:"column:category_id;type:bigint(20) unsigned;not null;index:category_id,priority:1" json:"category_id"`
	Title           string         `gorm:"column:title;type:text;not null" json:"title"`
	Excerpt         string         `gorm:"column:excerpt;type:text;not null" json:"excerpt"`
	Content         string         `gorm:"column:content;type:longtext;not null" json:"content"`
	Class           string         `gorm:"column:class;type:varchar(20);not null;index:class,priority:1" json:"class"`
	Status          string         `gorm:"column:status;type:varchar(20);not null" json:"status"`
	Parent          uint64         `gorm:"column:parent;type:bigint(20) unsigned;not null;index:parent,priority:1" json:"parent"`
	AllowedUserRole string         `gorm:"column:allowed_user_role;type:varchar(20);not null" json:"allowed_user_role"`
	CommentStatus   string         `gorm:"column:comment_status;type:varchar(20);not null" json:"comment_status"`
	ViewsCount      uint32         `gorm:"column:views_count;type:int(20) unsigned;not null" json:"views_count"`
	CreatedAt       time.Time      `gorm:"column:created_at;type:timestamp;not null;default:current_timestamp()" json:"created_at"`
	DeletedAt       gorm.DeletedAt `gorm:"column:deleted_at;type:timestamp" json:"deleted_at"`
	UpdatedAt       time.Time      `gorm:"column:updated_at;type:timestamp" json:"updated_at"`
}

// TableName Post's table name
func (*Post) TableName() string {
	return TableNamePost
}
