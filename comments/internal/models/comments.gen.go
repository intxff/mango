// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package models

import (
	"time"

	"gorm.io/gorm"
)

const TableNameComment = "comments"

// Comment mapped from table <comments>
type Comment struct {
	CommentID      uint64         `gorm:"column:comment_id;type:bigint(20) unsigned;primaryKey;autoIncrement:true" json:"comment_id"`
	PostID         uint64         `gorm:"column:post_id;type:bigint(20) unsigned;not null;index:post_id,priority:1" json:"post_id"`
	SenderUserID   uint64         `gorm:"column:sender_user_id;type:bigint(20) unsigned;not null;index:sender_user_id,priority:1" json:"sender_user_id"`
	SenderUserIP   []byte         `gorm:"column:sender_user_ip;type:binary(16);not null" json:"sender_user_ip"`
	ReceiverUserID uint64         `gorm:"column:receiver_user_id;type:bigint(20) unsigned;not null;index:receiver_user_id,priority:1" json:"receiver_user_id"`
	Content        string         `gorm:"column:content;type:text;not null" json:"content"`
	LikeCount      int32          `gorm:"column:like_count;type:int(16);not null" json:"like_count"`
	DislikeCount   int32          `gorm:"column:dislike_count;type:int(16);not null" json:"dislike_count"`
	Parent         uint64         `gorm:"column:parent;type:bigint(20) unsigned;not null;index:parent,priority:1" json:"parent"`
	CreatedAt      time.Time      `gorm:"column:created_at;type:timestamp;not null;default:current_timestamp()" json:"created_at"`
	DeletedAt      gorm.DeletedAt `gorm:"column:deleted_at;type:timestamp" json:"deleted_at"`
	UpdatedAt      time.Time      `gorm:"column:updated_at;type:timestamp" json:"updated_at"`
}

// TableName Comment's table name
func (*Comment) TableName() string {
	return TableNameComment
}
