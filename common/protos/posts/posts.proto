syntax = "proto3";

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/intxff/mango/common/protos/posts";

service Users {
  // create a new post
  rpc Create(CreateReq) returns (CreateResp) {
    option (google.api.http) = {
      post: "/v1/posts"
      body: "*"
    };
  }
  // update a post
  rpc Update(UpdateReq) returns (UpdateResp) {
    option (google.api.http) = {
      post: "/v1/posts/{post_id}"
      body: "*"
    };
  }
  // update posts in batch
  // example: update category or tag of dozens of posts
  rpc BatchUpdate(BatchUpdateReq) returns (BatchUpdateResp) {
    option (google.api.http) = {
      post: "/v1/posts:updatebatch"
      body: "*"
    };
  }
  // delete a post
  rpc Delete(DeleteReq) returns (DeleteResp) {
    option (google.api.http) = {delete: "/v1/posts/{post_id}"};
  }
  // delete posts in batch in admin
  rpc BatchDelete(BatchDeleteReq) returns (BatchDeleteResp) {
    option (google.api.http) = {
      post: "/v1/posts:batchdelete"
      body: "*"
    };
  }
  // get a post to display post
  rpc Get(GetReq) returns (GetResp) {
    option (google.api.http) = {get: "/v1/posts/{post_id}"};
  }
  // list posts
  // 1. used to list all posts in admin
  // 2. used to list all post in user's homepage
  // 3. list all posts of specified category or tag
  rpc List(ListReq) returns (ListResp) {
    option (google.api.http) = {get: "/v1/posts"};
  }
}

message CreateReq {
  uint64 user_id = 1;
  string user_ip = 2;
  uint64 category_id = 3;
  repeated string tags_id = 4;
  string title = 5;
  string content = 6;
  string class = 7;
  string status = 8;
  string allowed_role = 9;
  bool comment_status = 10;
}

message CreateResp {}

message DeleteReq {
  uint64 post_id = 1;
}

message DeleteResp {}

message BatchDeleteReq {
  repeated uint64 posts_id = 1;
}

message BatchDeleteResp {}

message UpdateReq {
  uint64 post_id = 1;
  optional uint64 category_id = 2;
  repeated uint64 tags_id = 3;
  optional string content = 4;
  optional string class = 5;
  optional string status = 6;
  optional string allowed_role = 7;
  optional bool comment_status = 8;
  repeated string update_mask = 1000;
}

message UpdateResp {}

message BatchUpdateReq {
  message Post {
    uint64 post_id = 1;
    repeated uint64 tags_id = 2;
  }
  repeated Post posts = 1;
  optional uint64 category_id = 2;
  optional string class = 3;
  optional string status = 4;
  optional string allowed_role = 5;
  optional bool comment_status = 6;
  repeated string update_mask = 1000;
}

message BatchDeleteResp {}

enum PostView {
  UNSPECIFIED = 0;
  BASIC = 1;
  SIMPLE = 2;
  FULL = 3;
}
message GetReq {
  uint64 post_id = 1;
  PostView view = 2;
}

message GetResp {
  uint64 user_id = 1;
  string user_ip = 2;
  uint64 category_id = 3;
  repeated string tags_id = 4;
  string title = 5;
  string content = 6;
  string class = 7;
  string status = 8;
  optional string allowed_role = 9;
  bool comment_status = 10;
  google.protobuf.Timestamp created_at = 1001;
  google.protobuf.Timestamp deleted_at = 1002;
  google.protobuf.Timestamp updated_at = 1003;
}

message ListReq {
  uint64 page_size = 1;
  uint64 page_token = 2;
  string view = 3;
  string order_by = 4;
  bool need_total_size = 5;
}

message ListResp {
  message Post {
    uint64 user_id = 1;
    string user_ip = 2;
    uint64 category_id = 3;
    repeated string tags_id = 4;
    string title = 5;
    string content = 6;
    string class = 7;
    string status = 8;
    optional string allowed_role = 9;
    bool comment_status = 10;
    google.protobuf.Timestamp created_at = 1001;
    optional google.protobuf.Timestamp deleted_at = 1002;
    google.protobuf.Timestamp updated_at = 1003;
  }
  repeated Post posts = 1;
  uint64 next_page_token = 2;
  optional uint64 total_size = 3;
}
